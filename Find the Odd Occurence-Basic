Given an array of positive integers. All numbers occur even number of times except one number which occurs odd number of times. Find the number.

Expected Time Complexity: O(n)
Expected Auxiliary Space​: Constant

Input:

The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines.

The first line of each test case consists of an integer N, where N is the size of array.
The second line of each test case contains N space separated integers denoting array elements.

Output:

Corresponding to each test case, print in a new line, the number which occur odd number of times.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 202
1 ≤ A[i] ≤ 1000


#include <iostream>
using namespace std;

int main() {
	int T;
	cin>>T;
	for(int i=0;i<T;i++){
	    int N;
	    cin>>N;
	    int a[N];
	    for(int i=0;i<N;i++){
	        cin>>a[i];
	        for(int j=0;j<i;j++){
	            if(a[j] == a[i]){
                    a[j]=a[i]=0;
	            }
	        }
	    }
	    for(int i=0;i<N;i++){
	        if(a[i] != 0){
	            cout<<a[i]<<endl;
	        }
	    }
	    
	}
	return 0;
}
