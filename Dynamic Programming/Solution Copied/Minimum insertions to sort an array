Given an array of integer numbers, we need to sort this array in a minimum number of steps where in one step we can insert any array element from its position to any other position.

 

Input:

The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. The first line of each test case contains an integer N denoting the size of array A.

The second line of each test case contains N space separated integers denoting elements of the array A[ ].


Output:

Output the minimum steps needed to sort the array. Print the answer for each test case in a new line.


Constraints:

1<= T <=100

1<= N <=1000

1<= A[ ] <=1000


Example:

Input:

1

7

2 3 5 1 4 7 6

Output:

3


#include <iostream>
using namespace std;

int count(int a[], int N){
    int lis[N];
    for(int i=0;i<N;i++){
        lis[i] = 1;
    }
    for(int i=0;i<N;i++){
        for(int j=0;j<i;j++){
            if(a[i] >= a[j] && lis[i] < lis[j] + 1){
                lis[i] = lis[j] + 1;
            }
        }
    }
    int max=0;
    for(int i=0;i<N;i++){
        if(max < lis[i]){
            max = lis[i];
        }
    }
    
    return (N-max);
}

int main() {
	int T;
	cin>>T;
	for(int i=0;i<T;i++){
	    int N;
	    cin>>N;
	    int a[N];
 	    for(int j=0;j<N;j++){
	        cin>>a[j];
	    }
	    cout<<count(a,N)<<endl;   
	}
	return 0;
}
